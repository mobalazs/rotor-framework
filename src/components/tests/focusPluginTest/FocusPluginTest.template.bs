import "pkg:/source/RotorFramework.bs"

' Get the FocusPlugin test template with 3-level, 2-branch structure + deep search tests
'
' Template layout (deterministic geometry; two 3-deep branches):
'
' topItem (Top) (x=420,y=40, w=140,h=80)           # top item, outside any group
'   children:
'     GroupL (x=100,y=160)                          # left branch group (depth 1)
'       GroupL2 (x=80,y=240)                        # inner left group (depth 2)
'         L1 (x=80,y=240,  w=140,h=80)              # left leaf 1 (depth 3)
'         L2 (x=260,y=240, w=140,h=80)              # left leaf 2 (depth 3)
'     GroupR (x=560,y=160)                          # right branch group (depth 1)
'       GroupR2 (x=540,y=240)                       # inner right group (depth 2)
'         R1 (x=540,y=240,  w=140,h=80)             # right leaf 1 (depth 3)
'         R2 (x=720,y=240,  w=140,h=80)             # right leaf 2 (depth 3)
'
' Deep search test structure:
'     DeepSearchGroup (x=100,y=400)                 # tests deep defaultFocusId resolution
'       Level1 (group)
'         Level2 (group)
'           DeepTarget (focusItem)                  # 3 levels deep
'     NestedGroupTestParent (x=300,y=400)          # tests group-to-group fallback
'       NestedChild (group) -> has defaultFocusId pointing to nested group
'         NestedTarget (group with fallback)

function getFocusTestTemplate() as object
    return {
        id: "topWidget",
        nodeType: "Rectangle",
        fields: {
            translation: [420, 40],
            width: 140,
            height: 80,
            color: "0x4A90E2FF"
        },
        focus: {
            group: {
                defaultFocusId: "GroupL2",
                down: "GroupL2",
                left: "GroupL2",
                right: "GroupR2"
            }
        },
        children: [
            ' GroupL - Left branch (depth 1)
            {
                id: "GroupL",
                nodeType: "Group",
                fields: {
                    translation: [100, 160]
                },
                children: {
                    ' GroupL2 - Inner left group (depth 2)
                    id: "GroupL2",
                    nodeType: "Group",
                    fields: {
                        translation: [0, 80]
                    },
                    focus: {
                        group: {
                            defaultFocusId: "L1"
                        }
                    },
                    children: [
                        ' L1 - First left leaf (depth 3)
                        {
                            id: "L1",
                            nodeType: "Rectangle",
                            fields: {
                                translation: [0, 0],
                                width: 140,
                                height: 80,
                                color: "0x7ED321FF"
                            },
                            focus: {
                            }
                        },
                        ' L2 - Second left leaf (depth 3)
                        {
                            id: "L2",
                            nodeType: "Rectangle",
                            fields: {
                                translation: [180, 0],
                                width: 140,
                                height: 80,
                                color: "0x7ED321FF"
                            },
                            focus: {
                            }
                        }
                    ]
                }
            },
            ' GroupR - Right branch (depth 1)
            {
                id: "GroupR",
                nodeType: "Group",
                fields: {
                    translation: [560, 160]
                },
                children: {
                    ' GroupR2 - Inner right group (depth 2)
                    id: "GroupR2",
                    nodeType: "Group",
                    fields: {
                        translation: [0, 80]
                    },
                    focus: {
                        group: {
                            defaultFocusId: "R1",
                            left: true ' means handled
                        }
                    },
                    children: [
                        ' R1 - First right leaf (depth 3)
                        {
                            id: "R1",
                            nodeType: "Rectangle",
                            fields: {
                                translation: [0, 0],
                                width: 140,
                                height: 80,
                                color: "0xF5A623FF"
                            },
                            focus: {
                            }
                        },
                        ' R2 - Second right leaf (depth 3)
                        {
                            id: "R2",
                            nodeType: "Rectangle",
                            fields: {
                                translation: [180, 0],
                                width: 140,
                                height: 80,
                                color: "0xF5A623FF"
                            },
                            focus: {
                            }
                        }
                    ]
                }
            },
            ' ===================================================================
            ' DEEP SEARCH TEST GROUPS
            ' ===================================================================
            ' DeepSearchGroup - tests deep defaultFocusId resolution (3 levels)
            {
                id: "DeepSearchGroup",
                nodeType: "Group",
                fields: {
                    translation: [100, 400]
                },
                focus: {
                    group: {
                        defaultFocusId: "DeepTarget",
                        left: true,
                        right: true,
                        up: true,
                        down: true
                    }
                },
                children: {
                    id: "DeepLevel1",
                    nodeType: "Group",
                    fields: {
                        translation: [0, 0]
                    },
                    children: {
                        id: "DeepLevel2",
                        nodeType: "Group",
                        fields: {
                            translation: [0, 0]
                        },
                        children: [
                            {
                                id: "DeepTarget",
                                nodeType: "Rectangle",
                                fields: {
                                    translation: [0, 0],
                                    width: 100,
                                    height: 50,
                                    color: "0xFF0000FF"
                                },
                                focus: {}
                            },
                            {
                                id: "DeepSibling",
                                nodeType: "Rectangle",
                                fields: {
                                    translation: [120, 0],
                                    width: 100,
                                    height: 50,
                                    color: "0x00FF00FF"
                                },
                                focus: {}
                            }
                        ]
                    }
                }
            },
            ' NestedGroupTestParent - tests group-to-group fallback with deep search
            {
                id: "NestedGroupTestParent",
                nodeType: "Group",
                fields: {
                    translation: [300, 400]
                },
                focus: {
                    group: {
                        defaultFocusId: "NestedTargetGroup",
                        left: false,
                        right: false,
                        up: false,
                        down: false
                    }
                },
                children: {
                    id: "NestedChildGroup",
                    nodeType: "Group",
                    fields: {
                        translation: [0, 0]
                    },
                    children: {
                        id: "NestedTargetGroup",
                        nodeType: "Group",
                        fields: {
                            translation: [0, 0]
                        },
                        focus: {
                            group: {
                                defaultFocusId: "FinalTarget",
                                left: false,
                                right: false,
                                up: false,
                                down: false
                            }
                        },
                        children: [
                            {
                                id: "FinalTarget",
                                nodeType: "Rectangle",
                                fields: {
                                    translation: [0, 0],
                                    width: 100,
                                    height: 50,
                                    color: "0x0000FFFF"
                                },
                                focus: {}
                            },
                            {
                                id: "FinalSibling",
                                nodeType: "Rectangle",
                                fields: {
                                    translation: [120, 0],
                                    width: 100,
                                    height: 50,
                                    color: "0xFFFF00FF"
                                },
                                focus: {}
                            }
                        ]
                    }
                }
            }
        ]
    }
end function

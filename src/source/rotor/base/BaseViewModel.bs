
'--------------------------------------------------------------------------
' @class ViewModel
' @description Base ViewModel class that extends Rotor.Widget to provide view lifecycle management.
'              ViewModels act as controllers for views, managing props, local state, and template
'              rendering. They provide lifecycle hooks for creation, mounting, updating, and destruction
'              of views, enabling reactive UI patterns in the Rotor framework.
'--------------------------------------------------------------------------
class ViewModel extends Rotor.Widget
    isViewModel = true

    viewModelState = {} ' shared across viewModel's widgets
    props = {} ' shared across viewModel's widgets

    '--------------------------------------------------------------------------
    ' @method setProps
    ' @description Updates the viewModel's props with new properties and triggers a view update.
    ' @param {Object} newProps - New properties to merge with existing props
    '--------------------------------------------------------------------------
    sub setProps(newProps as object)
        m.props.append(newProps)
        m.onUpdateView()
    end sub

    '--------------------------------------------------------------------------
    ' @method onCreateView
    ' @description Lifecycle hook called when the view is being created. Override this method to perform initialization tasks.
    '--------------------------------------------------------------------------
    sub onCreateView()
    end sub

    '--------------------------------------------------------------------------
    ' @method onTemplateCreated
    ' @description Lifecycle hook called after the template has been created. Use this to access and modify the created template structure.
    ' @param {Object} template - The created template object containing the view hierarchy
    '--------------------------------------------------------------------------
    sub onTemplateCreated(template as object)
    end sub

    '--------------------------------------------------------------------------
    ' @method onMountView
    ' @description Lifecycle hook called when the view is mounted to the scene graph. Override this method to perform post-mount operations.
    '--------------------------------------------------------------------------
    sub onMountView()
    end sub

    '--------------------------------------------------------------------------
    ' @method onUpdateView
    ' @description Lifecycle hook called when the view needs to be updated due to state or props changes. Override this method to handle updates.
    '--------------------------------------------------------------------------
    sub onUpdateView()
    end sub

    '--------------------------------------------------------------------------
    ' @method onDestroyView
    ' @description Lifecycle hook called when the view is being destroyed. Override this method to perform cleanup tasks.
    '--------------------------------------------------------------------------
    sub onDestroyView()
    end sub

    '--------------------------------------------------------------------------
    ' @method template
    ' @description Returns the default template structure for the view. Override this method to define custom view structure.
    ' @return {Object} Empty object representing the default template
    '--------------------------------------------------------------------------
    function template() as object
        return {}
    end function


end class
